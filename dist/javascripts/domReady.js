define([],function(){"use strict";define(function(){function n(n){var e;for(e=0;e<n.length;e+=1)n[e](r)}function e(){var e=u;l&&e.length&&(u=[],n(e))}function t(){l||(l=!0,c&&clearInterval(c),e())}function o(n){return l?n(r):u.push(n),o}var d,i,c,a="undefined"!=typeof window&&window.document,l=!a,r=a?document:null,u=[];if(a){if(document.addEventListener)document.addEventListener("DOMContentLoaded",t,!1),window.addEventListener("load",t,!1);else if(window.attachEvent){window.attachEvent("onload",t),i=document.createElement("div");try{d=null===window.frameElement}catch(f){}i.doScroll&&d&&window.external&&(c=setInterval(function(){try{i.doScroll(),t()}catch(n){}},30))}"complete"===document.readyState&&t()}return o.version="2.0.1",o.load=function(n,e,t,d){d.isBuild?t(null):o(t)},o})});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRvbVJlYWR5LmpzIl0sIm5hbWVzIjpbImRlZmluZSIsInJ1bkNhbGxiYWNrcyIsImNhbGxiYWNrcyIsImkiLCJsZW5ndGgiLCJkb2MiLCJjYWxsUmVhZHkiLCJyZWFkeUNhbGxzIiwiaXNQYWdlTG9hZGVkIiwicGFnZUxvYWRlZCIsInNjcm9sbEludGVydmFsSWQiLCJjbGVhckludGVydmFsIiwiZG9tUmVhZHkiLCJjYWxsYmFjayIsInB1c2giLCJpc1RvcCIsInRlc3REaXYiLCJpc0Jyb3dzZXIiLCJ3aW5kb3ciLCJkb2N1bWVudCIsImFkZEV2ZW50TGlzdGVuZXIiLCJhdHRhY2hFdmVudCIsImNyZWF0ZUVsZW1lbnQiLCJmcmFtZUVsZW1lbnQiLCJlIiwiZG9TY3JvbGwiLCJleHRlcm5hbCIsInNldEludGVydmFsIiwicmVhZHlTdGF0ZSIsInZlcnNpb24iLCJsb2FkIiwibmFtZSIsInJlcSIsIm9uTG9hZCIsImNvbmZpZyIsImlzQnVpbGQiXSwibWFwcGluZ3MiOiJBQUFBQSxVQUFXLFdBQ1AsWUFVSkEsUUFBTyxXQVNILFFBQVNDLEdBQWFDLEdBQ2xCLEdBQUlDLEVBQ0osS0FBS0EsRUFBSSxFQUFHQSxFQUFJRCxFQUFVRSxPQUFRRCxHQUFLLEVBQ25DRCxFQUFVQyxHQUFHRSxHQUlyQixRQUFTQyxLQUNMLEdBQUlKLEdBQVlLLENBRVpDLElBRUlOLEVBQVVFLFNBQ1ZHLEtBQ0FOLEVBQWFDLElBUXpCLFFBQVNPLEtBQ0FELElBQ0RBLEdBQWUsRUFDWEUsR0FDQUMsY0FBY0QsR0FHbEJKLEtBc0RSLFFBQVNNLEdBQVNDLEdBTWQsTUFMSUwsR0FDQUssRUFBU1IsR0FFVEUsRUFBV08sS0FBS0QsR0FFYkQsRUEvRlgsR0FBSUcsR0FBT0MsRUFBU04sRUFDaEJPLEVBQThCLG1CQUFYQyxTQUEwQkEsT0FBT0MsU0FDcERYLEdBQWdCUyxFQUNoQlosRUFBTVksRUFBWUUsU0FBVyxLQUM3QlosSUFtQ0osSUFBSVUsRUFBVyxDQUNYLEdBQUlFLFNBQVNDLGlCQUdURCxTQUFTQyxpQkFBaUIsbUJBQW9CWCxHQUFZLEdBQzFEUyxPQUFPRSxpQkFBaUIsT0FBUVgsR0FBWSxPQUN6QyxJQUFJUyxPQUFPRyxZQUFhLENBQzNCSCxPQUFPRyxZQUFZLFNBQVVaLEdBRTdCTyxFQUFVRyxTQUFTRyxjQUFjLE1BQ2pDLEtBQ0lQLEVBQWdDLE9BQXhCRyxPQUFPSyxhQUNqQixNQUFPQyxJQUtMUixFQUFRUyxVQUFZVixHQUFTRyxPQUFPUSxXQUNwQ2hCLEVBQW1CaUIsWUFBWSxXQUMzQixJQUNJWCxFQUFRUyxXQUNSaEIsSUFDRixNQUFPZSxNQUNWLEtBZWlCLGFBQXhCTCxTQUFTUyxZQUNUbkIsSUFtQ1IsTUFmQUcsR0FBU2lCLFFBQVUsUUFLbkJqQixFQUFTa0IsS0FBTyxTQUFVQyxFQUFNQyxFQUFLQyxFQUFRQyxHQUNyQ0EsRUFBT0MsUUFDUEYsRUFBTyxNQUVQckIsRUFBU3FCLElBTVZyQiIsImZpbGUiOiJkb21SZWFkeS5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2UgUmVxdWlyZUpTIGRvbVJlYWR5IDIuMC4xIENvcHlyaWdodCAoYykgMjAxMC0yMDEyLCBUaGUgRG9qbyBGb3VuZGF0aW9uIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKiBBdmFpbGFibGUgdmlhIHRoZSBNSVQgb3IgbmV3IEJTRCBsaWNlbnNlLlxuICogc2VlOiBodHRwOi8vZ2l0aHViLmNvbS9yZXF1aXJlanMvZG9tUmVhZHkgZm9yIGRldGFpbHNcbiAqL1xuLypqc2xpbnQgKi9cbi8qZ2xvYmFsIHJlcXVpcmU6IGZhbHNlLCBkZWZpbmU6IGZhbHNlLCByZXF1aXJlanM6IGZhbHNlLFxuICB3aW5kb3c6IGZhbHNlLCBjbGVhckludGVydmFsOiBmYWxzZSwgZG9jdW1lbnQ6IGZhbHNlLFxuICBzZWxmOiBmYWxzZSwgc2V0SW50ZXJ2YWw6IGZhbHNlICovXG5cblxuZGVmaW5lKGZ1bmN0aW9uICgpIHtcbiAgICAndXNlIHN0cmljdCc7XG5cbiAgICB2YXIgaXNUb3AsIHRlc3REaXYsIHNjcm9sbEludGVydmFsSWQsXG4gICAgICAgIGlzQnJvd3NlciA9IHR5cGVvZiB3aW5kb3cgIT09IFwidW5kZWZpbmVkXCIgJiYgd2luZG93LmRvY3VtZW50LFxuICAgICAgICBpc1BhZ2VMb2FkZWQgPSAhaXNCcm93c2VyLFxuICAgICAgICBkb2MgPSBpc0Jyb3dzZXIgPyBkb2N1bWVudCA6IG51bGwsXG4gICAgICAgIHJlYWR5Q2FsbHMgPSBbXTtcblxuICAgIGZ1bmN0aW9uIHJ1bkNhbGxiYWNrcyhjYWxsYmFja3MpIHtcbiAgICAgICAgdmFyIGk7XG4gICAgICAgIGZvciAoaSA9IDA7IGkgPCBjYWxsYmFja3MubGVuZ3RoOyBpICs9IDEpIHtcbiAgICAgICAgICAgIGNhbGxiYWNrc1tpXShkb2MpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gY2FsbFJlYWR5KCkge1xuICAgICAgICB2YXIgY2FsbGJhY2tzID0gcmVhZHlDYWxscztcblxuICAgICAgICBpZiAoaXNQYWdlTG9hZGVkKSB7XG4gICAgICAgICAgICAvL0NhbGwgdGhlIERPTSByZWFkeSBjYWxsYmFja3NcbiAgICAgICAgICAgIGlmIChjYWxsYmFja3MubGVuZ3RoKSB7XG4gICAgICAgICAgICAgICAgcmVhZHlDYWxscyA9IFtdO1xuICAgICAgICAgICAgICAgIHJ1bkNhbGxiYWNrcyhjYWxsYmFja3MpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogU2V0cyB0aGUgcGFnZSBhcyBsb2FkZWQuXG4gICAgICovXG4gICAgZnVuY3Rpb24gcGFnZUxvYWRlZCgpIHtcbiAgICAgICAgaWYgKCFpc1BhZ2VMb2FkZWQpIHtcbiAgICAgICAgICAgIGlzUGFnZUxvYWRlZCA9IHRydWU7XG4gICAgICAgICAgICBpZiAoc2Nyb2xsSW50ZXJ2YWxJZCkge1xuICAgICAgICAgICAgICAgIGNsZWFySW50ZXJ2YWwoc2Nyb2xsSW50ZXJ2YWxJZCk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGNhbGxSZWFkeSgpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgaWYgKGlzQnJvd3Nlcikge1xuICAgICAgICBpZiAoZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcikge1xuICAgICAgICAgICAgLy9TdGFuZGFyZHMuIEhvb3JheSEgQXNzdW1wdGlvbiBoZXJlIHRoYXQgaWYgc3RhbmRhcmRzIGJhc2VkLFxuICAgICAgICAgICAgLy9pdCBrbm93cyBhYm91dCBET01Db250ZW50TG9hZGVkLlxuICAgICAgICAgICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcIkRPTUNvbnRlbnRMb2FkZWRcIiwgcGFnZUxvYWRlZCwgZmFsc2UpO1xuICAgICAgICAgICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoXCJsb2FkXCIsIHBhZ2VMb2FkZWQsIGZhbHNlKTtcbiAgICAgICAgfSBlbHNlIGlmICh3aW5kb3cuYXR0YWNoRXZlbnQpIHtcbiAgICAgICAgICAgIHdpbmRvdy5hdHRhY2hFdmVudChcIm9ubG9hZFwiLCBwYWdlTG9hZGVkKTtcblxuICAgICAgICAgICAgdGVzdERpdiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICBpc1RvcCA9IHdpbmRvdy5mcmFtZUVsZW1lbnQgPT09IG51bGw7XG4gICAgICAgICAgICB9IGNhdGNoIChlKSB7fVxuXG4gICAgICAgICAgICAvL0RPTUNvbnRlbnRMb2FkZWQgYXBwcm94aW1hdGlvbiB0aGF0IHVzZXMgYSBkb1Njcm9sbCwgYXMgZm91bmQgYnlcbiAgICAgICAgICAgIC8vRGllZ28gUGVyaW5pOiBodHRwOi8vamF2YXNjcmlwdC5ud2JveC5jb20vSUVDb250ZW50TG9hZGVkLyxcbiAgICAgICAgICAgIC8vYnV0IG1vZGlmaWVkIGJ5IG90aGVyIGNvbnRyaWJ1dG9ycywgaW5jbHVkaW5nIGpkYWx0b25cbiAgICAgICAgICAgIGlmICh0ZXN0RGl2LmRvU2Nyb2xsICYmIGlzVG9wICYmIHdpbmRvdy5leHRlcm5hbCkge1xuICAgICAgICAgICAgICAgIHNjcm9sbEludGVydmFsSWQgPSBzZXRJbnRlcnZhbChmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB0ZXN0RGl2LmRvU2Nyb2xsKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICBwYWdlTG9hZGVkKCk7XG4gICAgICAgICAgICAgICAgICAgIH0gY2F0Y2ggKGUpIHt9XG4gICAgICAgICAgICAgICAgfSwgMzApO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgLy9DaGVjayBpZiBkb2N1bWVudCBhbHJlYWR5IGNvbXBsZXRlLCBhbmQgaWYgc28sIGp1c3QgdHJpZ2dlciBwYWdlIGxvYWRcbiAgICAgICAgLy9saXN0ZW5lcnMuIExhdGVzdCB3ZWJraXQgYnJvd3NlcnMgYWxzbyB1c2UgXCJpbnRlcmFjdGl2ZVwiLCBhbmRcbiAgICAgICAgLy93aWxsIGZpcmUgdGhlIG9uRE9NQ29udGVudExvYWRlZCBiZWZvcmUgXCJpbnRlcmFjdGl2ZVwiIGJ1dCBub3QgYWZ0ZXJcbiAgICAgICAgLy9lbnRlcmluZyBcImludGVyYWN0aXZlXCIgb3IgXCJjb21wbGV0ZVwiLiBNb3JlIGRldGFpbHM6XG4gICAgICAgIC8vaHR0cDovL2Rldi53My5vcmcvaHRtbDUvc3BlYy90aGUtZW5kLmh0bWwjdGhlLWVuZFxuICAgICAgICAvL2h0dHA6Ly9zdGFja292ZXJmbG93LmNvbS9xdWVzdGlvbnMvMzY2NTU2MS9kb2N1bWVudC1yZWFkeXN0YXRlLW9mLWludGVyYWN0aXZlLXZzLW9uZG9tY29udGVudGxvYWRlZFxuICAgICAgICAvL0htbSwgdGhpcyBpcyBtb3JlIGNvbXBsaWNhdGVkIG9uIGZ1cnRoZXIgdXNlLCBzZWUgXCJmaXJpbmcgdG9vIGVhcmx5XCJcbiAgICAgICAgLy9idWc6IGh0dHBzOi8vZ2l0aHViLmNvbS9yZXF1aXJlanMvZG9tUmVhZHkvaXNzdWVzLzFcbiAgICAgICAgLy9zbyByZW1vdmluZyB0aGUgfHwgZG9jdW1lbnQucmVhZHlTdGF0ZSA9PT0gXCJpbnRlcmFjdGl2ZVwiIHRlc3QuXG4gICAgICAgIC8vVGhlcmUgaXMgc3RpbGwgYSB3aW5kb3cub25sb2FkIGJpbmRpbmcgdGhhdCBzaG91bGQgZ2V0IGZpcmVkIGlmXG4gICAgICAgIC8vRE9NQ29udGVudExvYWRlZCBpcyBtaXNzZWQuXG4gICAgICAgIGlmIChkb2N1bWVudC5yZWFkeVN0YXRlID09PSBcImNvbXBsZXRlXCIpIHtcbiAgICAgICAgICAgIHBhZ2VMb2FkZWQoKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIC8qKiBTVEFSVCBPRiBQVUJMSUMgQVBJICoqL1xuXG4gICAgLyoqXG4gICAgICogUmVnaXN0ZXJzIGEgY2FsbGJhY2sgZm9yIERPTSByZWFkeS4gSWYgRE9NIGlzIGFscmVhZHkgcmVhZHksIHRoZVxuICAgICAqIGNhbGxiYWNrIGlzIGNhbGxlZCBpbW1lZGlhdGVseS5cbiAgICAgKiBAcGFyYW0ge0Z1bmN0aW9ufSBjYWxsYmFja1xuICAgICAqL1xuICAgIGZ1bmN0aW9uIGRvbVJlYWR5KGNhbGxiYWNrKSB7XG4gICAgICAgIGlmIChpc1BhZ2VMb2FkZWQpIHtcbiAgICAgICAgICAgIGNhbGxiYWNrKGRvYyk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICByZWFkeUNhbGxzLnB1c2goY2FsbGJhY2spO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBkb21SZWFkeTtcbiAgICB9XG5cbiAgICBkb21SZWFkeS52ZXJzaW9uID0gJzIuMC4xJztcblxuICAgIC8qKlxuICAgICAqIExvYWRlciBQbHVnaW4gQVBJIG1ldGhvZFxuICAgICAqL1xuICAgIGRvbVJlYWR5LmxvYWQgPSBmdW5jdGlvbiAobmFtZSwgcmVxLCBvbkxvYWQsIGNvbmZpZykge1xuICAgICAgICBpZiAoY29uZmlnLmlzQnVpbGQpIHtcbiAgICAgICAgICAgIG9uTG9hZChudWxsKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGRvbVJlYWR5KG9uTG9hZCk7XG4gICAgICAgIH1cbiAgICB9O1xuXG4gICAgLyoqIEVORCBPRiBQVUJMSUMgQVBJICoqL1xuXG4gICAgcmV0dXJuIGRvbVJlYWR5O1xufSk7XG4iXSwic291cmNlUm9vdCI6Ii9zb3VyY2UvIn0=
